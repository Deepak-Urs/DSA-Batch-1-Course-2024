class Solution {
public:
    int trap(vector<int>& height) {
        int left=0,right=height.size()-1;
        int mxl=0,mxr=0;
        int sum=0;

        while(left<right){
        if(height[left]<height[right])
        {
            if(height[left]>=mxl)
            {
                mxl=height[left];
            }
            else
                sum+=mxl-height[left];
            left++;
        }
        else
        {
            if(height[right]>mxr)
            {
                mxr=height[right];
            }
            else
                sum+=(mxr-height[right]);
            right--;
        }
        }
        return sum;
    }


Time complexity : O(n)
Space complexity : 0
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

class Solution {
public:
    int trap(vector<int>& height) {
        int suml=0,sumr=0;
        int mxl=0,mxr=0;
        int left, right;
        left=0;
        right=height.size()-1;
        while(height[left]==0)
            left++;
        while(height[right]==0)
            right--;
        
        while(left<=right)
        {
            if(height[left+1]>=height[left])
            {
                if(suml!=0)
                {
                    suml+=(mxl-height[left]);
                }
                left++;
            }
            else
            {
                    
                    if(mxl<height[left])
                    mxl=height[left];

                    suml+=(mxl-height[left+1]);
                    left+=2;
                
            }
            if(height[right]<=height[right-1])
            {
                if(sumr!=0)
                    sumr+=(mxr-height[right]);
                    right--;
            }
            else
            {
                
                if(mxr<height[right])
                mxr=height[right];

                sumr+=(mxr-height[right-1]);
                right-=2;
            }
                
            
        }
        int mx=suml+sumr;
        return mx;
    }

};
